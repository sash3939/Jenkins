---
- name: Preapre all hosts
  hosts: all
  tasks:
    - name: Create group
      become: true
      group:
        name: "{{ user_group }}"
        state: present
    - name: Create user
      become: true
      user:
        name: "{{ user_name }}"
        generate_ssh_key: true
      register: ssh_key_info
    - name: Upload SSH key
      become: true
      copy:
        src: ~/.ssh/id_rsa
        dest: "/home/{{ user_name }}/.ssh/id_rsa"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: 0600
    - name: Upload SSH Pub key
      become: true
      copy:
        src: ~/.ssh/id_rsa.pub
        dest: "/home/{{ user_name }}/.ssh/id_rsa.pub"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: 0644
    - name: Install JDK
      become: true
      get_url:
        url: https://download.java.net/java/GA/jdk18.0.2.1/db379da656dc47308e138f21b33976fa/1/GPL/openjdk-18.0.2.1_linux-x64_bin.tar.gz
        dest: /opt/openjdk-18.0.2.1_linux-x64_bin.tar.gz
    - name: Unzip the downloaded file
      unarchive:
        src: /opt/openjdk-18.0.2.1_linux-x64_bin.tar.gz
        dest: /opt
        mode: 1777
        remote_src: yes
    - name: Set the JAVA_HOME in /etc/profile file
      become: true
      lineinfile:
        path: /etc/profile
        state: present
        line: "{{ item }}"
      with_items:
        - 'export JAVA_HOME="/opt/jdk-18.0.2.1"'
        - 'export PATH=$PATH:$JAVA_HOME/bin'
    - name: Reload /etc/profile file
      become: true
      command: bash -c "source /etc/profile"

- name: Get Jenkins master installed
  hosts: jenkins_masters
  tasks:
    - name: Add the Jenkins key using apt-key adv
      become: true
      command: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys FCEF32E745F2C3D5
      ignore_errors: yes


    - name: Update apt cache
      become: true
      apt:
        update_cache: yes

    - name: Add Jenkins repository with signed key
      become: true
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/jenkins-keyring.gpg] http://pkg.jenkins.io/debian-stable binary/
        state: present
    - name: Update apt cache
      become: true
      apt:
        update_cache: yes

    - name: Install Jenkins and requirements
      become: true
      apt:
        name:
          - jenkins
          - git
        state: present
      register: jenkins_installed
    - name: Ensure jenkins agents are present in known_hosts file
      become: true
      become_user: "{{ jenkins_user_name }}"
      known_hosts:
        name: "{{ hostvars[item].ansible_host }}"
        state: present
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host }}') }}"
        hash_host: true
      with_items: "{{ groups.jenkins_agents }}"
    - name: Start Jenkins
      become: true
      systemd:
        name: jenkins
        state: restarted
        enabled: true
      when: jenkins_installed is changed
- name: Prepare jenkins agent
  hosts: jenkins_agents
  become: true
  become_user: "{{ jenkins_user_name }}"
  tasks:
    - name: Add master publickey into authorized_key
      authorized_key:
        user: "{{ jenkins_user_name }}"
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    - name: Create agent_dir
      become_user: root
      file:
        path: "{{ jenkins_agent_dir }}"
        state: directory
        owner: "{{ jenkins_user_name }}"
        group: "{{ jenkins_user_group }}"
    - name: Add docker repo
      become_user: root
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        validate_certs: false
    - name: Install some required
      become_user: root
      yum:
        name:
          - git
          - python3
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
    - name: Update pip
      become_user: root
      pip:
        executable: pip3
        name: pip
        extra_args: --upgrade
    - name: Install Ansible
      become_user: root
      pip:
        executable: pip3
        name:
          - selinux
          - ansible
        state: present
    - name: Reinstall Selinux
      become_user: root
      pip:
        executable: pip3
        name:
          - selinux
        state: forcereinstall
    - name: Add local to PATH
      lineinfile:
        dest: ~/.bashrc
        regexp: export PATH=$PATH:/home/jenkins/.local/bin
        line: export PATH=$PATH:/home/jenkins/.local/bin
    - name: Create docker group
      become_user: root
      group:
        name: docker
        state: present
    - name: Add jenkinsuser to dockergroup
      become_user: root
      user:
        name: "{{ jenkins_user_name }}"
        groups: docker
    - name: Restart docker
      become_user: root
      systemd:
        name: docker
        state: restarted
        enabled: true
    - name: Install agent.jar
      get_url:
        url: "http://{{ hostvars['jenkins-master']['ansible_host'] }}:8080/jnlpJars/agent.jar"
        dest: "{{ jenkins_agent_dir }}"
      register: install_agent
      until: install_agent is succeeded
      retries: 10
      timeout: 10
    - name: Fix Elasticsearch bootstrap checks
      become_user: root
      ansible.posix.sysctl:
        name: vm.max_map_count
        value: '262144'
        state: present
